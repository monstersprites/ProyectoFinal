@page "/MapaVehiculos"

<a href="/gestion_reportes"><img src="/imgs/arrow.png"></a>

<br />
<br />

<h3>Mapeado de vehiculos</h3>

<hr />

<br />

<button class="btn btn-primary" @onclick="buscarVehiculos">Listar</button>

<br />

<RadzenGoogleMap id="map" style="height: 400px" Zoom=@zoom Center=@(new GoogleMapPosition() { Lat = 18.98367097987177, Lng = -70.45763034294242 }) MarkerClick=@OnMarkerClick>
    <Markers>
        @foreach (var u in ubicaciones)
        {
            <RadzenGoogleMapMarker Position=@(new GoogleMapPosition() { Lat = u.Latitud, Lng= u.Longitud }) />
        }
    </Markers>
</RadzenGoogleMap>


@if (MostrarVehiculo == true)
{

    foreach (var f in filtro)
    {

        <div class="card" style="width: 18rem;">
            <img src="" class="card-img-top">
            <div class="card-body">
                <h5 class="card-title">@f.BRAND  @f.MODEL</h5>
                <p class="card-text">Matricula: @f.Enrollment</p>
                <p class="card-text">Color: @f.COLOUR</p>
                <p class="card-text">Cantidad de pasajeros: @f.PASSENGERS</p>
                <p class="card-text">Capacidad de carga: @f.LOADCAPACITY Kgs</p>
                <p class="card-text">Precio por día: @f.PRICEPERDAY</p>
                <p class="card-text">Número de seguro: @f.INSURANCE_NO</p>
            </div>
        </div>

    }

}



@code {

    int zoom = 7;

    bool MostrarVehiculo;

    List<Vehicle> vehiculos = new List<Vehicle>();

    List<Ubicaciones> ubicaciones = new List<Ubicaciones>();

    List<Vehicle> filtro = new List<Vehicle>();

    public void buscarVehiculos()
    {

        String API = $"https://pruebasv4.herokuapp.com/AllVehicle";

        WebClient cliente = new WebClient();

        var datos = cliente.DownloadString(API);

        vehiculos = JsonConvert.DeserializeObject<List<Vehicle>>(datos);

        foreach (var v in vehiculos)
        {
            ubicaciones.Add(new Ubicaciones { Latitud = double.Parse(v.LATITUDE), Longitud = double.Parse(v.LONGITUDE) });
        }

    }

    void OnMarkerClick(RadzenGoogleMapMarker marker)
    {

        filtro = vehiculos.Where(
            x => x.LATITUDE == marker.Position.Lat.ToString() &&
            x.LONGITUDE == marker.Position.Lng.ToString()
            ).ToList();

        if (MostrarVehiculo == true)
        {
            MostrarVehiculo = false;
        }
        else
        {
            MostrarVehiculo = true;
        }


    }

    public class Vehicle
    {

        public string BRAND { get; set; }

        public string MODEL { get; set; }

        public int YEAR { get; set; }

        public string COLOUR { get; set; }

        public double PRICEPERDAY { get; set; }

        public string TYPE { get; set; }

        public string LOADCAPACITY { get; set; }

        public int PASSENGERS { get; set; }

        public string Enrollment { get; set; }

        public string INSURANCE_NO { get; set; }

        public string PHOTO { get; set; }

        public string LATITUDE { get; set; }

        public string LONGITUDE { get; set; }

    }

    public class Ubicaciones
    {

        public double Latitud { get; set; }

        public double Longitud { get; set; }

    }

}
