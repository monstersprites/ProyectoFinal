@page "/agregar_cliente"

@using System.IO
@using ProyectoFinal.Data
@inject CedulaService cedulaService
@inject NavigationManager uriHelper

<a href="/gestion_clientes"><img src="/imgs/arrow.png"></a>

<br />
<br />
<br />

<h3>Agregar cliente</h3>

<hr />

<form>

    <div class="mb-3">
        <label for="txtcedula" class="form-label">Cédula</label>
        <input type="text" class="form-control" id="txtcedula" @bind-value="cedula">
    </div>

    <button class="btn btn-secondary" type="button" @onclick="GetPersona">Verificar</button>

    <div class="mb-3">
        <label for="txtnombre" class="form-label">Nombre</label>
        <input type="text" class="form-control" id="txtnombre" @bind-value="nombre" disabled>
    </div>

    <div class="mb-3">
        <label for="txtapellido" class="form-label">Apellido</label>
        <input type="text" class="form-control" id="txtapellido" @bind-value="apellido" disabled>
    </div>

    <div class="mb-3">
        <label for="txtcorreo" class="form-label">Correo</label>
        <input type="text" class="form-control" id="txtcorreo" @bind-value="correo">
    </div>

    <div class="mb-3">
        <label for="txtnacionalidad" class="form-label">Nacionalidad</label>
        <input type="text" class="form-control" id="txtnacionalidad" @bind-value="nacionalidad">
    </div>

    <div class="mb-3">
        <label for="txtlicencia" class="form-label">Licencia</label>
        <input type="text" class="form-control" id="txtlicencia" @bind-value="licencia">
    </div>

    <div class="mb-3">
        <label for="txtsangre" class="form-label">Tipo de sangre:</label>
        <select id="txtsangre" @bind="tsangre">
            <option value="null" selected>Seleccione el tipo de sangre</option>
            <option value="O negativo">O negativo</option>
            <option value="O positivo">O positivo</option>
            <option value="A negativo">A negativo</option>
            <option value="A positivo">A positivo</option>
            <option value="B negativo">B negativo</option>
            <option value="B positivo">B positivo</option>
            <option value="AB negativo">AB negativo</option>
            <option value="AB positivo">AB positivo</option>
        </select>
    </div>

    <div class="mb-3">
        <label for="txtfotopersona" class="form-label">Foto de usted </label>
        <InputFile OnChange="@LoadFilePersona" class="form-control" />
    </div>

    <div class="mb-3">
        <label for="txtfotolicencia" class="form-label">Foto de su licencia de conducir </label>
        <InputFile OnChange="@LoadFileLicencia" class="form-control" />
    </div>

    <button class="btn btn-primary" @onclick="ApiRest" type="button">Agregar</button>

</form>

    @code {

        [Inject]
        public IJSRuntime JS { get; set; }

        string cedula;
        string nombre;
        string apellido;
        string correo;
        string nacionalidad;
        string tsangre;
        string fotopersona;
        string fotolicencia;
        string licencia;

        public async Task ApiRest()
        {
            var http = new HttpClient();

            var cliente = new Cliente
            {
                IDENTIFICATION = cedula,
                FIRSTNAME = nombre,
                LASTNAME = apellido,
                EMAIL = correo,
                NATIONALITY = nacionalidad,
                BLOODTYPE = tsangre,
                PHOTOPERSON = fotopersona,
                PHOTOLICENSE = fotolicencia,
                LICENSE = licencia
            };

            var jsonBody = JsonConvert.SerializeObject(cliente);
            var buffer = Encoding.UTF8.GetBytes(jsonBody);
            var byteContent = new ByteArrayContent(buffer);
            byteContent.Headers.ContentType = new MediaTypeHeaderValue("application/json");

            var response = await http.PostAsync("https://pruebasv4.herokuapp.com/registerCustomer", byteContent);

            var content = await response.Content.ReadAsStringAsync();

            if (response.IsSuccessStatusCode)
            {
                await JS.InvokeVoidAsync("alert", "Registro agregado exitosamente");
                uriHelper.NavigateTo(uriHelper.Uri, forceLoad: true);
            }
            else
            {
                await JS.InvokeVoidAsync("alert", "Revise los datos que ha agregadp y vuelva a intentar");
            }
        }

        public async Task LoadFilePersona(InputFileChangeEventArgs e)
        {
            try
            {
                using var reader = new StreamReader(e.File.OpenReadStream());

                string file = await reader.ReadToEndAsync();
                
                fotopersona = $"data:{e.File.ContentType};base64," + Convert.ToBase64String(Encoding.ASCII.GetBytes(file));
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }

        public async Task LoadFileLicencia(InputFileChangeEventArgs e)
        {
            try
            {
                using var reader = new StreamReader(e.File.OpenReadStream());

                string file = await reader.ReadToEndAsync();
                
                fotolicencia = $"data:{e.File.ContentType};base64," + Convert.ToBase64String(Encoding.ASCII.GetBytes(file));
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }

        public async Task GetPersona()
        {
            var persona = await cedulaService.GetDatosAsync(cedula);

            if (persona.ok)
            {
                nombre = persona.Nombres;
                apellido = $"{persona.Apellido1} {persona.Apellido2}";
            }
            else
            {
                await JS.InvokeVoidAsync("alert", "Ingrese una cedula valida");
                nombre = "";
                apellido = "";
            }
        }

        public class Cliente
        {

            public string IDENTIFICATION { get; set; }

            public string FIRSTNAME { get; set; }

            public string LASTNAME { get; set; }

            public string EMAIL { get; set; }

            public string LICENSE { get; set; }

            public string NATIONALITY { get; set; }

            public string BLOODTYPE{ get; set; }

            public string PHOTOPERSON { get; set; }

            public string PHOTOLICENSE { get; set; }

        }

    }
