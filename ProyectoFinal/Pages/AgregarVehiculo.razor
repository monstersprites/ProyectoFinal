@page "/agregar_vehiculo"
@using System;
@using System.Net.Http;
@using System.Net.Http.Headers;
@using System.Threading.Tasks;
@using System.Text;
@using Newtonsoft.Json;

<a href="/gestion_vehiculos"><img src="/imgs/arrow.png"></a>

<br />
<br />
<br />


<h2>Agregar vehiculo</h2>

<hr />

<form>
    <div class="mb-3">
        <label for="txtmarca" class="form-label">Marca</label>
        <input type="text" class="form-control" id="txtmarca" @bind-value="marca">
    </div>

    <div class="mb-3">
        <label for="txtmodelo" class="form-label">Modelo</label>
        <input type="text" class="form-control" id="txtmodelo" @bind-value="modelo">
    </div>

    <div class="mb-3">
        <label for="txtaño" class="form-label">Año</label>
        <input type="number" class="form-control" id="txtaño" @bind-value="año">
    </div>

    <div class="mb-3">
        <label for="txtcolor" class="form-label">Color</label>
        <input type="text" class="form-control" id="txtcolor" @bind-value="color">
    </div>

    <div class="mb-3">
        <label for="txtprecio" class="form-label">Precio por día(RD$)</label>
        <input type="number" class="form-control" id="txtprecio" @bind-value="precio">
    </div>

    <div class="custom-select">
        <label>Tipo:</label>
        <select @bind="tipo">
            <option value="Carro">Carro</option>
            <option value="Camioneta">Camioneta</option>
            <option value="Camión">Camión</option>
            <option value="Motocicleta">Motocicleta</option>
        </select>
    </div>

    <div class="mb-3">
        <label for="txtcapacidad" class="form-label">Capacidad de carga(Kg)</label>
        <input type="number" class="form-control" id="txtcapacidad" @bind-value="capacidad">
    </div>

    <div class="mb-3">
        <label for="txtpasajeros" class="form-label">Pasajeros</label>
        @pasajeros
        <input type="range" class="form-control" id="txtpasajeros" @bind-value="pasajeros">
    </div>

    <div class="mb-3">
        <label for="txtmatricula" class="form-label">Matricula</label>
        <input type="text" class="form-control" id="txtmatricula" @bind-value="matricula">
    </div>

    <div class="mb-3">
        <label for="txtseguro" class="form-label">Número de seguro</label>
        <input type="number" class="form-control" id="txtseguro" @bind-value="seguro">
    </div>

    <div class="mb-3">
        <label for="txtfoto" class="form-label">Foto</label>
        <input type="file" class="form-control" id="txtfoto" @bind-value="foto">
    </div>


    <button class="btn btn-primary" @onclick="ApiRest">Agregar</button>
</form>


@code {

    string marca;
    string modelo;
    int año;
    string color;
    int precio;
    string tipo;
    int capacidad;
    int pasajeros;
    string matricula;
    long seguro;
    string foto;



    public void addVehicle()
    {
        string API = "https://pruebasv4.herokuapp.com/registervehicle";

        Vehicle nuevo_vehiculo = new Vehicle();

        nuevo_vehiculo.BRAND = marca;
        nuevo_vehiculo.MODEL = modelo;
        nuevo_vehiculo.YEAR = año;
        nuevo_vehiculo.COLOUR = color;
        nuevo_vehiculo.PRICEPERDAY = precio;
        nuevo_vehiculo.TYPE = tipo;
        nuevo_vehiculo.LOADCAPACITY = capacidad.ToString();
        nuevo_vehiculo.PASSAGERS = pasajeros;
        nuevo_vehiculo.ENROLLMENT = matricula;
        nuevo_vehiculo.INSURANCE_NO = seguro.ToString();
        nuevo_vehiculo.PHOTO = foto;


        //GetPost2(API, nuevo_vehiculo);
    }

    //public async Task<string> Lanzar(Vehicle v)
    //{

    //    try
    //    {

    //        HttpClient client = new HttpClient()
    //        {
    //            BaseAddress = new Uri("https://pruebasv4.herokuapp.com/registervehicle"),
    //        };
    //        client.DefaultRequestHeaders.Accept.Clear();
    //        client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
    //        HttpResponseMessage respuesta = client.PostAsJsonAsync("/registervehicle/", v).Result;
    //        if (respuesta.StatusCode == HttpStatusCode.OK)
    //        {
    //            // La respuesta es correcta y por ejemplo la retorno como string
    //            return await respuesta.Content.ReadAsStringAsync();
    //        }

    //    }
    //    catch (Exception e)
    //    {

    //    }

    //    return "OK";

    //}

    //public static string GetPost1(string url, Vehicle vehiculo)
    //{

    //    string result = "";


    //    WebRequest oRequest = WebRequest.Create(url);
    //    oRequest.Method = "post";
    //    oRequest.ContentType = "application/json; charset-UTF-8";

    //    using (var oSW = new StreamWriter(oRequest.GetRequestStream()))
    //    {

    //        string json = JsonConvert.SerializeObject(vehiculo, Formatting.Indented);

    //        oSW.Write(json);

    //        oSW.Flush();
    //        oSW.Close();

    //    }

    //    WebResponse oResponse = oRequest.GetResponse();
    //    using (var oSR = new StreamReader(oResponse.GetResponseStream()))
    //    {
    //        result = oSR.ReadToEnd().Trim();
    //    }


    //    return result;
    //}

    //public static string GetPost2(string url, Vehicle vehiculo)
    //{

    //    string result = "";


    //    WebRequest oRequest = WebRequest.Create(url);
    //    oRequest.Method = "post";
    //    oRequest.ContentType = "application/json; charset-UTF-8";

    //    using (var oSW = new StreamWriter(oRequest.GetRequestStream()))
    //    {

    //        string json = "{ \"BRAND\":\"Audi\", \"MODEL\":\"R8\", \"YEAR\":\"2015\", \"COLOUR\":\"Azul\", \"PRICEPERDAY\":\"5000\"}";

    //        oSW.Write(json);

    //        oSW.Flush();
    //        oSW.Close();

    //    }

    //    WebResponse oResponse = oRequest.GetResponse();
    //    using (var oSR = new StreamReader(oResponse.GetResponseStream()))
    //    {
    //        result = oSR.ReadToEnd().Trim();
    //    }


    //    return result;
    //}

    public async Task ApiRest()
    {
        var http = new HttpClient();

        var body = new
        {
            BRAND = marca,
            MODEL = modelo,
            YEAR = año,
            COLOUR = color,
            PRICEPERDAY = precio,
            TYPE = tipo,
            LOADCAPACITY = capacidad,
            PASSAGERS = pasajeros,
            ENROLLMENT = matricula,
            INSURANCE_NO = seguro,
            PHOTO = foto,

        };

        var jsonBody = JsonConvert.SerializeObject(body);
        var buffer = Encoding.UTF8.GetBytes(jsonBody);
        var byteContent = new ByteArrayContent(buffer);
        byteContent.Headers.ContentType = new MediaTypeHeaderValue("application/json");

        var response = await http.PostAsync("https://pruebasv4.herokuapp.com/registervehicle", byteContent);
        // var response = await http.GetAsync("https://pruebasv4.herokuapp.com");

        var content = await response.Content.ReadAsStringAsync();

        Console.WriteLine(content);
    }

    public class Vehicle
    {

        public string BRAND { get; set; }

        public string MODEL { get; set; }

        public int YEAR { get; set; }

        public string COLOUR { get; set; }

        public int PRICEPERDAY { get; set; }

        public string TYPE { get; set; }

        public string LOADCAPACITY { get; set; }

        public int PASSAGERS { get; set; }

        public string ENROLLMENT { get; set; }

        public string INSURANCE_NO { get; set; }

        public string PHOTO { get; set; }

        public string LATITUDE { get; set; }

        public string LONGITUDE { get; set; }

    }

}
